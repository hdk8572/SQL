SELECT STUDENT_NO, STUDENT_NAME, ROUND(AVG(POINT), 1)
    FROM (SELECT * FROM TB_STUDENT WHERE ABSENCE_YN <> 'Y') S
        JOIN TB_DEPARTMENT D USING(DEPARTMENT_NO)
        JOIN TB_GRADE G USING(STUDENT_NO)
    GROUP BY STUDENT_NO
    HAVING AVG(POINT) >= 4.0
;

SELECT STUDENT_NO, STUDENT_NAME, AVG(POINT) AVGPOINT
    FROM (SELECT * FROM TB_STUDENT WHERE  DEPARTMENT_NO =
                                            (SELECT DEPARTMENT_NO 
                                                FROM TB_DEPARTMENT 
                                                WHERE DEPARTMENT_NAME='국어국문학과')
    ) S
        JOIN TB_GRADE G USING (STUDENT_NO)
    GROUP BY STUDENT_NO, STUDENT_NAME
    
;
-- 5-18 문제 (ROWNUM)사용
SELECT TB2.* FROM
(
SELECT ROWNUM RN, TB1.* FROM
(
SELECT STUDENT_NO, STUDENT_NAME, AVG(POINT) AVGPOINT
    FROM (SELECT * FROM TB_STUDENT WHERE  DEPARTMENT_NO =
                                            (SELECT DEPARTMENT_NO 
                                                FROM TB_DEPARTMENT 
                                                WHERE DEPARTMENT_NAME='국어국문학과')
    ) S
        JOIN TB_GRADE G USING (STUDENT_NO)
    GROUP BY STUDENT_NO, STUDENT_NAME
    ORDER BY AVGPOINT DESC
) TB1
) TB2
WHERE RN = 5
;

SELECT TB2.*
FROM (
SELECT ROWNUM RN, TB1.* 
FROM (
SELECT EMP_ID, EMP_NAME, (SELECT DEPT_TITLE FROM DEPARTMENT D WHERE DEPT_ID = E.DEPT_CODE) "부서 명", JOB_CODE, ENT_DATE, SALARY*12 + (SALARY*NVL(BONUS,0)) SAL_RANK
    FROM EMPLOYEE E
    ORDER BY SAL_RANK DESC
) TB1
) TB2
WHERE RN = 1
;

SELECT EMP_ID, SALARY*12 + (SALARY*NVL(BONUS,0)) SAL_RANK FROM EMPLOYEE ORDER BY SAL_RANK DESC;
SELECT DECODE(BONUS, NULL, 0, BONUS) BONUS FROM EMPLOYEE;
SELECT * FROM EMPLOYEE;
SELECT * FROM DEPARTMENT;

-- 입사일 순서가 빠른 3명

SELECT TB2.* FROM(
SELECT ROWNUM RN, TB1.* FROM(
SELECT *
FROM EMPLOYEE
ORDER BY HIRE_DATE 
) TB1
) TB2
WHERE RN < 4
;
-- 춘대학교 04-15
SELECT TB2.*
FROM(
SELECT ROWNUM RN, TB1.*
FROM(
SELECT DISTINCT SUBSTR(TERM_NO, 1, 4) TERM
FROM TB_GRADE
ORDER BY TERM DESC
) TB1
) TB2
WHERE RN < 4
;

-- 수강인원 (Class_no별)
SELECT COUNT(*) CNT , CLASS_NO
    FROM TB_GRADE
    GROUP BY CLASS_NO
    ORDER BY CNT DESC
;
---- 수강인원 TOP3 ==> N-TOP (CLASS_NO별)
SELECT * FROM
(
SELECT COUNT(*) CNT , CLASS_NO
    FROM TB_GRADE
    GROUP BY CLASS_NO
    ORDER BY CNT DESC
)
WHERE ROWNUM <= 3
;
-- 수강인원을 구하기 전.. 최근 3년이라는 조건으로 걸러낸 후 수강인원을 구해야함.
SELECT COUNT(*) CNT , CLASS_NO
    FROM TB_GRADE
    WHERE (
    GROUP BY CLASS_NO
    ORDER BY CNT DESC
)
;